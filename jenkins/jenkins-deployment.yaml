apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec", "pods/log"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]   
- apiGroups: ["apps"]
  resources: ["deployments/status"]
  verbs: ["get", "list", "watch"]
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      containers:
      - name: jenkins
        image: jenkins-with-tools:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        - containerPort: 50000
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: docker-sock
          mountPath: /var/run
        env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        - name: JAVA_OPTS
          value: "-Djenkins.install.runSetupWizard=false"
      - name: dind
        image: docker:dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        - name: DOCKER_OPTS
          value: "--dns 8.8.8.8 --dns 8.8.4.4"
        args:
        - "--insecure-registry=registry.default.svc.cluster.local:5000"
        - "--ip6tables=false"
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-pvc
      - name: docker-sock
        emptyDir: {}